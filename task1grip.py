# -*- coding: utf-8 -*-
"""Task1GRIP

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TYETuZ2YkjZ9cBuQ8hwjO3VLOKG4I5ks
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt 
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error

data = pd.read_csv ('/home/earth/Downloads/student_scores - student_scores.csv')
data.head(10)

data.isnull== True

sns.set_style('darkgrid')
sns.scatterplot(y= data['Scores'], x= data['Hours'])
plt.title('Marks or Study Hours',size=20)
plt.ylabel('Marks ', size=12)
plt.xlabel('Hours Studied', size=12)
plt.show()

sns.regplot(x= data['Hours'], y= data['Scores'])
plt.title('Regression Analysis',size=40)
plt.ylabel('Marks Percentage', size=12)
plt.xlabel('Hours Studied', size=12)
plt.show()
print(data.corr())

X = data.iloc[:, :-1].values  
y = data.iloc[:, 1].values
train_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 0)

regression = LinearRegression()
regression.fit(train_X, train_y)
print("It's now traind by Rishabh joshi")

pred_y = regression.predict(val_X)
prediction = pd.DataFrame({'Hours': [i[0] for i in val_X], 'Predicted Marks': [k for k in pred_y]})
prediction

compare_scores = pd.DataFrame({'Actual Marks': val_y, 'Predicted Marks': pred_y})
compare_scores

plt.scatter(x=val_X, y=val_y, color='blue')
plt.plot(val_X, pred_y, color='Black')
plt.title('Actual or Predicted', size=20)
plt.ylabel('Marks Percentage', size=12)
plt.xlabel('Hours Studied', size=12)
plt.show()

print('Mean absolute error: ',mean_absolute_error(val_y,pred_y))

hours = [9.25]
answer = regression.predict([hours])
print("Score = {}".format(round(answer[0],3)))